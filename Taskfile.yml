version: '2'

tasks:
  default:
    sources:
      - ./src/*
    cmds:
      - cmd: '{{if eq OS "windows"}}C:\\Windows\\System32\\taskkill.exe /f /t /im{{else}}kill -9 {{end}} {{.BINARY_NAME}}{{exeExt}}'
        ignore_error: true
      - task: build
      - task: run
    env:
      GOPATH: 
        sh: pwd
  build:
    cmds:                                                                                                                                                        
      - '{{if eq OS "windows"}}.\\utils\\uutils.exe {{end}}mkdir -p ./bin'
      - go build -v -o ./bin/{{.BINARY_NAME}}{{exeExt}} {{.BINARY_NAME}}
    env:
      GOPATH: 
        sh: pwd
  run:
    cmds:
      - ./bin/{{.BINARY_NAME}}{{exeExt}}
    vars:
      CUR: {sh: pwd}
  deps:
    cmds:
      - go get {{catLines .DEPS}}
    env:
      GOPATH: {sh: pwd}
  clean:
    cmds:
      - '{{if eq OS "windows"}}.\\utils\\uutils.exe {{end}}rm -rf ./bin'
      - '{{if eq OS "windows"}}.\\utils\\uutils.exe {{end}}rm -rf ./releases'
  fmt:
    cmds:
      - go fmt {{.BINARY_NAME}}
    env:
      GOPATH: {sh: pwd}

  buildarmrel:
    cmds:
      - '{{if eq OS "windows"}}.\\utils\\uutils.exe {{end}}rm -rf ./releases/{{.PLATFORM}}_{{.ARCH}}'
      - '{{if eq OS "windows"}}.\\utils\\uutils.exe {{end}}mkdir -p ./releases/{{.PLATFORM}}_{{.ARCH}}'
      - '{{if eq OS "windows"}}.\\utils\\uutils.exe {{end}}cp -r ./static ./releases/{{.PLATFORM}}_{{.ARCH}}/static'
      - '{{if eq OS "windows"}}.\\utils\\uutils.exe {{end}}cp ./config.json ./releases/{{.PLATFORM}}_{{.ARCH}}/config.json'
      - go build -v -o ./releases/{{.PLATFORM}}_{{.ARCH}}/{{.BINARY_NAME}}{{if eq .EXTENSION ""}}{{else}}.{{.EXTENSION}}{{end}} {{.BINARY_NAME}}
    env:
      GOPATH: {sh: pwd}
      GOOS: "{{.PLATFORM}}"
      GOARCH: "{{.ARCH}}"
      GOARM: "{{.ARM}}"
  buildrel:
    cmds:
      - '{{if eq OS "windows"}}.\\utils\\uutils.exe {{end}}rm -rf ./releases/{{.PLATFORM}}_{{.ARCH}}'
      - '{{if eq OS "windows"}}.\\utils\\uutils.exe {{end}}mkdir -p ./releases/{{.PLATFORM}}_{{.ARCH}}'
      - '{{if eq OS "windows"}}.\\utils\\uutils.exe {{end}}cp -r ./static ./releases/{{.PLATFORM}}_{{.ARCH}}/static'
      - '{{if eq OS "windows"}}.\\utils\\uutils.exe {{end}}cp ./config.json ./releases/{{.PLATFORM}}_{{.ARCH}}/config.json'
      - go build -v -o ./releases/{{.PLATFORM}}_{{.ARCH}}/{{.BINARY_NAME}}{{if eq .EXTENSION ""}}{{else}}.{{.EXTENSION}}{{end}} {{.BINARY_NAME}}
    env:
      GOPATH: {sh: pwd}
      GOOS: "{{.PLATFORM}}"
      GOARCH: "{{.ARCH}}"
  ## arch and platform listing
  ## https://gist.github.com/asukakenji/f15ba7e588ac42795f421b48b8aede63
  all:
    cmds:
      - '{{if eq OS "windows"}}.\\utils\\uutils.exe {{end}}rm -rf ./releases'
      - task: buildrel
        vars: {PLATFORM: "darwin", ARCH: "amd64", EXTENSION: ""}
      - task: buildrel
        vars: {PLATFORM: "windows", ARCH: "amd64", EXTENSION: "exe"}
      - task: buildrel
        vars: {PLATFORM: "linux", ARCH: "amd64", EXTENSION: ""}
      - task: buildarmrel
        vars: {PLATFORM: "linux", ARCH: "arm", ARM: "5", EXTENSION: ""}
      - task: buildarmrel
        vars: {PLATFORM: "plan9", ARCH: "arm", ARM: "5", EXTENSION: ""}
      - task: buildrel
        vars: {PLATFORM: "openbsd", ARCH: "amd64", EXTENSION: ""} 
    env:
      GOPATH: {sh: pwd}
